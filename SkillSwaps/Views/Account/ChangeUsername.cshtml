@model SkillSwaps.Models.User.ChangeUserData

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="ro">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Schimbare Username</title>
    <link rel="stylesheet" href="~/Content/assets/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/assets/css/style.css" />
    <style>
        .error-message {
            color: red;
            font-size: 0.8em;
            margin-top: 5px;
        }
    </style>
</head>
<body class="login-body" data-vide-bg="assets/img/login-bg.mp4">
    <main class="login-body" data-vide-bg="assets/img/login-bg.mp4">
        <form class="form-default" method="post" action="@Url.Action("ChangeUsername", "Account")" onsubmit="return validateForm()">
            @Html.AntiForgeryToken()

            <div class="login-form">
                <div class="logo-login">
                    <img src="~/Content/assets/img/logo/loder.png" alt="logo" />
                </div>

                <h2>Schimbare Username</h2>

                @if (!ViewData.ModelState.IsValid && ViewData.ModelState.Count > 0)
                {
                    <div class="alert alert-danger">
                        <ul class="mb-0">
                            @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@modelError.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }

                <div class="form-input">
                    @Html.LabelFor(m => m.NewUsername, "Username Nou")
                    @Html.TextBoxFor(m => m.NewUsername, new
                    {
                        @class = "form-control",
                        placeholder = "Username Nou",
                        name = "NewUsername",
                        id = "NewUsername"
                    })
                    <p id="newUsernameError" class="error-message"></p>
                </div>

                <div class="form-input">
                    @Html.LabelFor(m => m.Password, "Parola (pentru confirmare)")
                    @Html.PasswordFor(m => m.Password, new
                    {
                        @class = "form-control",
                        placeholder = "Parola (pentru confirmare)",
                        name = "Password",
                        id = "Password"
                    })
                    <p id="passwordError" class="error-message"></p>
                </div>

                <div class="form-input pt-30">
                    <input type="submit" value="Schimbă Username" class="btn btn-primary" />
                </div>

                <div class="pt-3">
                    <a href="@Url.Action("Index", "Home")" class="registration">Înapoi Acasă</a>
                </div>
            </div>
        </form>
    </main>

    <script src="~/Content/assets/js/jquery-1.12.4.min.js"></script>
    <script src="~/Content/assets/js/bootstrap.min.js"></script>
    <script>
        function validateForm() {
            const newUsernameInput = document.getElementById('NewUsername');
            const newUsername = newUsernameInput.value;
            const newUsernameError = document.getElementById('newUsernameError');
            const passwordInput = document.getElementById('Password');
            const password = passwordInput.value;
            const passwordError = document.getElementById('passwordError');
            let isValid = true;

            newUsernameError.textContent = '';
            passwordError.textContent = '';

            if (newUsername.length < 3) {
                newUsernameError.textContent = 'Username-ul nou trebuie să aibă cel puțin 3 caractere.';
                isValid = false;
            }

            if (password.length < 5) {
                passwordError.textContent = 'Parola trebuie să aibă cel puțin 5 caractere.';
                isValid = false;
            }

            return isValid;
        }
    </script>
</body>
</html>